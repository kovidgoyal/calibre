#!/usr/bin/env python
# -*- coding: utf-8 -*-

__license__ = 'GPL v3'
__copyright__ = u'Łukasz Grąbczewski 2011'
__version__ = '2.0'

import re
import os
from calibre import walk
from calibre.utils.zipfile import ZipFile
from calibre.ptempfile import PersistentTemporaryFile
from calibre.web.feeds.news import BasicNewsRecipe


class dwutygodnik(BasicNewsRecipe):
    __author__ = u'Łukasz Grąbczewski'
    title = 'Dwutygodnik'
    language = 'pl'
    publisher = 'Narodowy Instytut Audiowizualny'
    publication_type = 'magazine'
    description = u'Strona Kultury: literatura, teatr, film, sztuka, muzyka, felietony, rozmowy'

    conversion_options = {
        'authors': 'Dwutygodnik.com', 'publisher': publisher, 'language':
        language, 'comments': description, 'no_default_epub_cover': True,
        'preserve_cover_aspect_ratio': True
    }

    def build_index(self):
        browser = self.get_browser()
        browser.open('http://www.dwutygodnik.com/')

        # find the link
        epublink = browser.find_link(text_regex=re.compile('Wydanie EPUB'))

        # download ebook
        self.report_progress(0, _('Downloading ePUB'))
        response = browser.follow_link(epublink)
        book_file = PersistentTemporaryFile(suffix='.epub')
        book_file.write(response.read())
        book_file.close()

        # convert
        self.report_progress(0.2, _('Converting to OEB'))
        oeb = self.output_dir + '/INPUT/'
        if not os.path.exists(oeb):
            os.makedirs(oeb)
        with ZipFile(book_file.name) as f:
            f.extractall(path=oeb)

        for f in walk(oeb):
            if f.endswith('.opf'):
                return f
