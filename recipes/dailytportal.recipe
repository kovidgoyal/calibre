__license__ = 'GPL v3'
__copyright__ = '2011, Darko Miletic <darko.miletic at gmail.com>'
'''
daily.tportal.hr
'''

from calibre.web.feeds.news import BasicNewsRecipe


class Pagina12(BasicNewsRecipe):
    title = 'Daily tportal.h'
    __author__ = 'Darko Miletic'
    description = 'News from Croatia'
    publisher = 'tportal.hr'
    category = 'news, politics, Croatia'
    oldest_article = 2
    max_articles_per_feed = 200
    no_stylesheets = True
    encoding = 'utf-8'
    use_embedded_content = False
    language = 'en_HR'
    remove_empty_feeds = True
    publication_type = 'newsportal'
    extra_css             = """
                               body{font-family: Verdana,sans-serif }
                               img{margin-bottom: 0.4em; display:block}
                               h1,h2{color: #2D648A; font-family: Georgia,serif}
                               .artAbstract{font-size: 1.2em; font-family: Georgia,serif}
                            """

    conversion_options = {
        'comment': description, 'tags': category, 'publisher': publisher, 'language': language
    }

    remove_tags = [
        dict(name=['meta', 'link', 'embed', 'object', 'iframe', 'base']), dict(
            name='div', attrs={'class': 'artInfo'})
    ]
    remove_attributes = ['lang']

    keep_only_tags = dict(attrs={'class': 'articleDetails'})

    feeds = [(u'News', u'http://daily.tportal.hr/rss/dailynaslovnicarss.xml')]

    def preprocess_html(self, soup):
        for item in soup.findAll(style=True):
            del item['style']
        for item in soup.findAll('a'):
            limg = item.find('img')
            if item.string is not None:
                str = item.string
                item.replaceWith(str)
            else:
                if limg:
                    item.name = 'div'
                    item.attrs = []
                else:
                    str = self.tag_to_string(item)
                    item.replaceWith(str)
        for item in soup.findAll('img', alt=False):
            item['alt'] = 'image'
        return soup
