from calibre.web.feeds.news import BasicNewsRecipe


class DziennikBaltycki(BasicNewsRecipe):
    title = u'Dziennik Ba\u0142tycki'
    __author__ = 'fenuks'
    description = u'Gazeta Regionalna Dziennik Bałtycki. Najnowsze Wiadomości Trójmiasto i Wiadomości Pomorskie. Czytaj!'
    category = 'newspaper'
    language = 'pl'
    masthead_url = 'http://s.polskatimes.pl/g/logo_naglowek/dziennikbaltycki.png?24'
    oldest_article = 7
    max_articles_per_feed = 100
    remove_empty_feeds = True
    no_stylesheets = True
    use_embedded_content = False
    ignore_duplicate_articles = {'title', 'url'}
    keep_only_tags = [dict(name='section', attrs={'class': 'zajawka'}),
        dict(name='section', attrs={'id': 'tresc'})
]
    remove_tags = [dict(name='div', attrs={'class':['materialyZKategorii', 'materialyPodobne']}), dict(name='a', attrs={
        'class': 'czytajDalej'}), dict(attrs={'src': 'http://nm.dz.com.pl/dz.png'})]

    feeds = [
    (u'Wiadomo\u015bci', u'http://www.dziennikbaltycki.pl/rss/dziennikbaltycki_wiadomosci.xml?201302'),
    (u'Sport', u'http://dziennikbaltycki.feedsportal.com/c/32980/f/533756/index.rss?201302'),
    (u'Rejsy', u'http://www.dziennikbaltycki.pl/rss/dziennikbaltycki_rejsy.xml?201302'),
    (u'Biznes na Pomorzu', u'http://www.dziennikbaltycki.pl/rss/dziennikbaltycki_biznesnapomorzu.xml?201302'),
    (u'GOM', u'http://www.dziennikbaltycki.pl/rss/dziennikbaltycki_gom.xml?201302'),
    (u'Opinie', u'http://www.dziennikbaltycki.pl/rss/dziennikbaltycki_opinie.xml?201302'),
    (u'Pitawal Pomorski', u'http://www.dziennikbaltycki.pl/rss/dziennikbaltycki_pitawalpomorski.xml?201302')]

    def print_version(self, url):
        return url.replace('artykul', 'drukuj')

    def skip_ad_pages(self, soup):
        if 'Advertisement' in soup.title:
            nexturl = soup.find('a')['href']
            return self.index_to_soup(nexturl, raw=True)

    def get_cover_url(self):
        soup = self.index_to_soup(
            'http://www.prasa24.pl/gazeta/dziennik-baltycki/')
        self.cover_url = soup.find(id='pojemnik').img['src']
        return getattr(self, 'cover_url', self.cover_url)
