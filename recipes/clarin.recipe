#!/usr/bin/env  python2
# -*- mode: python -*-
# -*- coding: utf-8 -*-

from __future__ import unicode_literals
__license__ = 'GPL v3'
__copyright__ = '2008-2016, Darko Miletic <darko.miletic at gmail.com>'
'''
clarin.com
'''

import six.moves.urllib.request, six.moves.urllib.parse, six.moves.urllib.error
from calibre import strftime
from calibre.web.feeds.news import BasicNewsRecipe


class Clarin(BasicNewsRecipe):
    title = 'Clarín'
    __author__ = 'Darko Miletic'
    description = 'Clarin.com. Noticias de la Argentina y el mundo. Información actualizada las 24 horas y en español. Informate ya'
    publisher = 'Grupo Clarin'
    category = 'news, politics, Argentina'
    oldest_article = 2
    max_articles_per_feed = 100
    use_embedded_content = False
    no_stylesheets = True
    encoding = 'utf8'
    delay = 1
    language = 'es_AR'
    publication_type = 'newspaper'
    needs_subscription = 'optional'
    INDEX = 'http://www.clarin.com'
    LOGIN = 'https://app-pase.clarin.com/pase-registracion/app/pase/ingresarNavegable?execution=e1s1'
    masthead_url = 'http://www.clarin.com/images/logo_clarin.svg'
    cover_url = strftime('http://tapas.clarin.com/tapa/%Y/%m/%d/%Y%m%d_thumb.jpg')
    extra_css             = """
                               body{font-family: Arial,Helvetica,sans-serif}
                               h2{font-family: Georgia,serif; font-size: xx-large}
                               .info,.nombre-autor,.hora{font-size: small}
                               .columnista-datos ul{list-style-type: none;}
                            """

    conversion_options = {
        'comment': description, 'tags': category, 'publisher': publisher, 'language': language
    }

    keep_only_tags = [
                      dict(name='p', attrs={'class'   : 'volanta'}),
                      dict(name='h1', attrs={'itemprop': 'headline'}),
                      dict(name='div', attrs={'class'   : 'bajada'}),
                      dict(name='div', attrs={'class'   : 'body-nota'})
                     ]
    remove_tags = [
        dict(name=['meta', 'base', 'link', 'iframe', 'embed', 'object']),
        dict(attrs={'class': ['tags-bar', 'breadcrumb', 'share-bar', 'share']}),
        dict(name='div', attrs={'class': lambda x: x and 'r-nota' in x.split()}),
        dict(attrs={'id': ['relacionadas']}),
        dict(name='a', attrs={'class':'content-new'})
    ]
    remove_tags_after = dict(name='div', attrs={'id': 'relacionadas'})
    remove_attributes = ['lang']

    feeds = [
    (u'Lo Ultimo', u'http://www.clarin.com/rss/lo-ultimo/'),
    (u'Politica', u'http://www.clarin.com/rss/politica/'),
    (u'Deportes', u'http://www.clarin.com/rss/deportes/'),
    (u'Mundo', u'http://www.clarin.com/rss/mundo/'),
    (u'Espectaculos', u'http://www.clarin.com/rss/espectaculos/'),
    (u'Sociedad', u'http://www.clarin.com/rss/sociedad/'),
    (u'Ciudades', u'http://www.clarin.com/rss/ciudades/'),
    (u'Policiales', u'http://www.clarin.com/rss/policiales/'),
    (u'Internet', u'http://www.clarin.com/rss/internet/')
    ]

    def get_browser(self):
        br = BasicNewsRecipe.get_browser(self)
        br.open(self.INDEX)
        if self.username is not None and self.password is not None:
            data = six.moves.urllib.parse.urlencode({'ingresar_ingresar_paseForm': 'ingresar_ingresar_paseForm',
                                     'ingresar_ingresar_email_paseInputComponent': self.username,
                                     'ingresar_ingresar_palabraClave_paseInputComponent': self.password,
                                     'ingresar_ingresar_ingresar_paseButton': 'Ingresar',
                                     'javax.faces.ViewState': 'e1s1'  # noqa
                                     })
            br.open(self.LOGIN, data)
        return br
