from calibre.web.feeds.news import BasicNewsRecipe
class tvn24(BasicNewsRecipe):
    title          = u'TVN24'
    oldest_article = 7
    max_articles_per_feed = 100
    __author__        = 'fenuks, Artur Stachecki'
    description   = u'Sport, Biznes, Gospodarka, Informacje, Wiadomości Zawsze aktualne wiadomości z Polski i ze świata'
    category       = 'news'
    language       = 'pl'
    #masthead_url= 'http://www.tvn24.pl/_d/topmenu/logo2.gif'
    cover_url= 'http://www.qzdrowiu.pl/Upload/KnowQZdrowiu_PressOffice/TVN24_logo_575702b7-edce-4b6f-a41b-4395f9456f96_ff6d6ccf-528a-4b94-9e61-2fed727aba35.png'
    extra_css= 'ul {list-style: none; padding: 0; margin: 0;} li {float: left;margin: 0 0.15em;}'
    remove_empty_feeds = True
    remove_javascript = True
    no_stylesheets = True
    keep_only_tags=[
#       dict(name='h1', attrs={'class':'size38 mt20 pb20'}),
        dict(name='div', attrs={'class':'mainContainer'}),
#       dict(name='p'),
#       dict(attrs={'class':['size18 mt10 mb15', 'bold topicSize1', 'fromUsers content', 'textArticleDefault']})
                   ]
    remove_tags=[
        dict(attrs={'class':['commentsInfo', 'textSize', 'related newsNews align-right', 'box', 'watchMaterial text', 'related galleryGallery align-center', 'advert block-alignment-right', 'userActions', 'socialBookmarks', 'im yourArticle fl', 'dynamicButton addComment fl', 'innerArticleModule onRight cols externalContent', 'thumbsGallery', 'relatedObject customBlockquote align-right', 'lead', 'mainRightColumn', 'articleDateContainer borderGreyBottom', 'socialMediaContainer onRight loaded', 'quizContent', 'twitter', 'facebook', 'googlePlus', 'share', 'voteResult', 'reportTitleBar bgBlue_v4 mb15', 'innerVideoModule center']}),
        dict(name='article', attrs={'class':['singleArtPhotoCenter', 'singleArtPhotoRight', 'singleArtPhotoLeft']}),
        dict(name='section', attrs={'id':['forum', 'innerArticle', 'quiz toCenter', 'mb20']}),
        dict(name='div', attrs={'class':'socialMediaContainer big p20 mb20 borderGrey  loaded'})
              ]
    remove_tags_after=[dict(name='li', attrs={'class':'share'})]
    feeds          = [(u'Najnowsze', u'http://www.tvn24.pl/najnowsze.xml'), ]
                #(u'Polska', u'www.tvn24.pl/polska.xml'), (u'\u015awiat', u'http://www.tvn24.pl/swiat.xml'), (u'Sport', u'http://www.tvn24.pl/sport.xml'), (u'Biznes', u'http://www.tvn24.pl/biznes.xml'), (u'Meteo', u'http://www.tvn24.pl/meteo.xml'), (u'Micha\u0142ki', u'http://www.tvn24.pl/michalki.xml'), (u'Kultura', u'http://www.tvn24.pl/kultura.xml')]

    def preprocess_html(self, soup):
        for alink in soup.findAll('a'):
            if alink.string is not None:
                tstr = alink.string
                alink.replaceWith(tstr)
        return soup

