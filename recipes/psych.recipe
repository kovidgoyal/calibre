#!/usr/bin/env python
# vim:fileencoding=utf-8

from calibre.web.feeds.recipes import BasicNewsRecipe


def check_words(words):
    return lambda x: x and frozenset(words.split()).intersection(x.split())


class PsychologyToday(BasicNewsRecipe):

    title = 'Psychology Today'
    __author__ = 'Kovid Goyal'

    description = ('This magazine takes information from the latest research'
                   ' in the field of psychology and makes it useful to people in their everyday'
                   ' lives. Its coverage encompasses self-improvement, relationships, the mind-body'
                   ' connection, health, family, the workplace and culture.')
    language = 'en'
    encoding = 'UTF-8'
    no_javascript = True
    no_stylesheets = True

    keep_only_tags = [
        dict(name='div', attrs={'data-type': 'article'})
    ]
    remove_tags = [
        dict(attrs={'id': 'pt-social-media'}),
    ]

    def parse_index(self):
        soup = self.index_to_soup('http://www.psychologytoday.com/magazine')
        div = soup.find(id='block-views-magazine-issues-block')
        a = div.find('h4').find('a')
        self.timefmt = ' [%s]' % self.tag_to_string(a).capitalize()
        soup = self.index_to_soup('http://www.psychologytoday.com' + a['href'])
        div = soup.find(role='main')
        self.cover_url = div.find(
            'img', src=lambda x: x and '/field_magazine_cover/' in x)['src'].partition('?')[0]
        articles = []
        for x in div.findAll('div', {'class': check_words('collection__item')}):
            h = x.find(['h2', 'h3', 'h4', 'h5'], {
                       'class': check_words('blog__title blog_entry__title')})
            title = self.tag_to_string(h)
            url = 'http://www.psychologytoday.com' + h.find('a')['href']
            self.log('\n', title, 'at', url)
            desc = x.find(['div', 'p'], {'class': check_words(
                'collection__subtitle blog_entry__teaser')}).find(text=True)
            if desc:
                self.log(desc)
            else:
                desc = ''
            articles.append({'title': title, 'url': url, 'description': desc})
        return [('Current Issue', articles)]
