#!/usr/bin/env python
from __future__ import unicode_literals
__license__ = 'GPL v3'
__copyright__ = '2008, Kovid Goyal <kovid at kovidgoyal.net>'
'''
Recipe for the web version of the The Atlantic
'''
from calibre.web.feeds.news import BasicNewsRecipe

def classes(classes):
    q = frozenset(classes.split(' '))
    return dict(
        attrs={'class': lambda x: x and frozenset(x.split()).intersection(q)}
    )


def prefix_classes(classes):
    q = classes.split()

    def test(x):
        if x:
            for cls in x.split():
                for c in q:
                    if cls.startswith(c):
                        return True
        return False
    return dict(attrs={'class': test})

class TheAtlantic(BasicNewsRecipe):

    
    title = 'TheAtlantic.com'
    description = 'News and editorial about politics, culture, entertainment, tech, etc. Contains many articles not seen in The Atlantic magazine'
    __author__ = 'Kovid Goyal'
    language = 'en'
    encoding = 'utf-8'

    no_stylesheets = True
    remove_attributes = ['style']
    extra_css = '''
        .credit { text-align: right; font-size: 75%; display: block }
        .figcaption { font-size: 75% }
        .caption { font-size: 75% }
        .lead-img { display: block }
        p.dropcap:first-letter {
        float: left; text-transform: uppercase; font-weight: bold; font-size: 5.55em; line-height: 0.83;
        margin: 0; padding-right: 7px; margin-bottom: -2px; text-align: center;
        }
    '''

    remove_tags = [
        classes(
            'c-ad c-share-social c-recirculation-link social-kit-top letter-writer-info callout secondary-byline embed-wrapper'
            ' offset-wrapper boxtop-most-popular social-icons hints read-more c-article-writer__social ArticleLayoutSection_rightRail__Dy9g'
        ),
        prefix_classes('ArticleRecirc_inline__'),
        {
            'name': ['meta', 'link', 'noscript', 'aside', 'h3']
        },
        {
            'attrs': {
                'class': ['offset-wrapper', 'boxtop-most-popular']
            }
        },
        {
            'attrs': {
                'class': lambda x: x and 'article-tools' in x
            }
        },
        {
            'src': lambda x: x and 'spotxchange.com' in x
        },
        dict(id='main-navigation')
    ]
    remove_tags_after = classes('article-body')
    remove_tags_before = dict(id='article')

    no_stylesheets = True
    remove_attributes = ['style']
    extra_css = '''
        .credit { text-align: right; font-size: 75%; display: block }
        .figcaption { font-size: 75% }
        .caption { font-size: 75% }
        .lead-img { display: block }
        p.dropcap:first-letter {
        float: left; text-transform: uppercase; font-weight: bold; font-size: 5.55em; line-height: 0.83;
        margin: 0; padding-right: 7px; margin-bottom: -2px; text-align: center;
        }
    '''

    def get_browser(self):
        br = BasicNewsRecipe.get_browser(self)
        br.set_cookie('inEuropeanUnion', '0', '.theatlantic.com')
        return br

    def preprocess_html(self, soup):
        for img in soup.findAll('img'):

            if img.has_attr('data-srcset'):
                data_srcset = img['data-srcset']
                if ',' in data_srcset:
                    img['src'] = data_srcset.split(',')[0]
                else:
                    img['src'] = data_srcset.split()[0]

            if img.has_attr('src') and 'data:image/svg+xml,' in img['src']:
                img.extract()

        return soup

    use_embedded_content = False

    feeds = [
        ('The Atlantic', 'https://www.theatlantic.com/feed/all/'),
        ('Best of The Atlantic', 'https://www.theatlantic.com/feed/best-of/'),
        ('Politics | The Atlantic', 'https://www.theatlantic.com/feed/channel/politics/'),
        ('Business | The Atlantic', 'https://www.theatlantic.com/feed/channel/business/'),
        ('Culture | The Atlantic', 'https://www.theatlantic.com/feed/channel/entertainment/'),
        ('Global | The Atlantic', 'https://www.theatlantic.com/feed/channel/international/'),
        ('Technology | The Atlantic', 'https://www.theatlantic.com/feed/channel/technology/'),
        ('U.S. | The Atlantic', 'https://www.theatlantic.com/feed/channel/national/'),
        ('Health | The Atlantic', 'https://www.theatlantic.com/feed/channel/health/'),
        ('Video | The Atlantic', 'https://www.theatlantic.com/feed/channel/video/'),
        ('Sexes | The Atlantic', 'https://www.theatlantic.com/feed/channel/sexes/'),
        ('Education | The Atlantic', 'https://www.theatlantic.com/feed/channel/education/'),
        ('Science | The Atlantic', 'https://www.theatlantic.com/feed/channel/science/'),
        ('News | The Atlantic', 'https://www.theatlantic.com/feed/channel/news/'),
        ('Press Releases | The Atlantic', 'https://www.theatlantic.com/feed/channel/press-releases/'),
        ('Newsletters | The Atlantic', 'https://www.theatlantic.com/feed/channel/newsletters/'),
        ('The Atlantic Photo', 'https://feeds.feedburner.com/theatlantic/infocus'),
        ('Notes | The Atlantic', 'https://feeds.feedburner.com/TheAtlanticNotes'),
    ]
