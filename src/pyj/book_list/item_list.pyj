# vim:fileencoding=utf-8
# License: GPL v3 Copyright: 2015, Kovid Goyal <kovid at kovidgoyal.net>
from __python__ import hash_literals

from dom import build_rule, svgicon
from elementmaker import E
from widgets import add_extra_css

from book_list.theme import get_font_size, get_color

iv_counter = 0
CLASS_NAME = 'generic-items-list'

add_extra_css(def():
    sel = '.' + CLASS_NAME + ' '
    style = ''
    style += build_rule(sel + 'li', padding='1em', border_bottom='solid 1px ' + get_color('window-foreground'), border_top='solid 1px ' + get_color('window-background'), cursor='pointer', list_style='none')
    style += build_rule(sel + '.item-title', font_size=get_font_size('item-list-title'))
    style += build_rule(sel + ' .item-subtitle', font_size=get_font_size('item-list-subtitle'), font_style='italic')
    style += build_rule(sel + ' li:hover', color=get_color('list-hover-foreground'), background_color=get_color('list-hover-background'), border_top_color=get_color('list-hover-foreground'))
    style += build_rule(sel + ' li:active', transform='scale(1, 1.5)')
    return style
)

class ItemsView:

    def __init__(self, interface_data, book_list_container):
        nonlocal iv_counter
        iv_counter += 1
        self.container_id = 'items-view-' + iv_counter
        div = E.div(
            id=self.container_id, style='display:none', class_=CLASS_NAME,
        )
        book_list_container.appendChild(div)

    @property
    def container(self):
        return document.getElementById(self.container_id)

    @property
    def is_visible(self):
        self.container.style.display is 'block'

    @is_visible.setter
    def is_visible(self, val):
        self.container.style.display = 'block' if val else 'none'

    def clear(self):
        c = self.container
        while c.lastChild is not c.firstChild:
            c.removeChild(c.lastChild)
        return c

    def init(self, data):
        items = getattr(data, 'items', data)
        subtitle = getattr(data, 'subtitle', None)
        c = self.clear()
        if subtitle:
            c.appendChild(E.p(subtitle, style="font-style:italic; padding: 1em 1ex; border-bottom: solid 1px currentColor"))
        ul = E.ul()
        c.appendChild(ul)
        has_icons = False
        for item in items:
            if item.icon_name:
                has_icons = True
                break

        for item in items:
            ic = ''
            if has_icons:
                if item.icon_name:
                    ic = svgicon(item.icon_name)
                ic = E.span(ic, '\xa0')
            ul.appendChild(E.li(E.a(href='javascript:void(0)',
                E.div(ic, item.title, class_='item-title')
            )))
            a = ul.lastChild.firstChild
            if item.subtitle:
                a.appendChild(E.div(item.subtitle, class_='item-subtitle', style='padding-top:1ex'))
            a.addEventListener('click', def(event): event.preventDefault();)
            if item.action:
                ul.lastChild.addEventListener('click', item.action)


def create_item(title, action=None, subtitle=None, icon_name=None):
    return {'title':title, 'action':action, 'subtitle':subtitle, 'icon_name':icon_name}
